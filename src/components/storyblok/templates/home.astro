---
import { storyblokEditable, renderRichText, useStoryblokApi } from '@storyblok/astro'
import { Picture } from 'astro:assets';
import Posts from "@components/posts.astro"
const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? "draft" : "published",
  content_type: 'blog_post',
})

const posts = data.stories.map(story => {
  return {
    title: story.name,
    tag_list: story.tag_list,
    slug: story.full_slug,
    publishedAt: new Date(story.published_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
  }
})

const { blok } = Astro.props
const content = renderRichText(blok.hero_content)
const heroImage = blok?.hero_image?.filename
const heroImageDimensions = heroImage?.split('/')[5].split('x')
---
<div class="container max-w-3xl"  {...storyblokEditable(blok)}>
  <div class="flex flex-col gap-4 p-8 md:p-24">
    {heroImage && <Picture formats={['avif', 'webp']} loading="eager" src={heroImage} width={heroImageDimensions?.[0]} height={heroImageDimensions?.[1]} alt={blok?.hero_image?.alt} class="w-fit h-48 mb-8 md:mb-12" />}
    <Fragment set:html={content} />
    
    {blok?.social_links?.length >= 0 && (
      <ul class="mt-12 flex gap-4">
      {blok?.social_links?.map(({ link, title }: { link: any, title:string }, index: number) => (
        <>
          <li>
            <a href={link?.url} target={link?.target} class="social">{title}</a>
          </li>
          {index !== blok?.social_links?.length - 1 && <li>&bull;</li>}
        </>
      ))}
    </ul>
    )}
  </div>
  {posts?.length > 0 && <Posts posts={posts} />}
</div>